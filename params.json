{"name":"Google Translate CLI","tagline":"Google Translate to serve as a command line tool","body":"# Google Translate to serve as a command line tool\r\n\r\n[![Build Status](https://travis-ci.org/soimort/google-translate-cli.png?branch=master)](https://travis-ci.org/soimort/google-translate-cli)\r\n\r\n[google-translate-cli](https://github.com/soimort/google-translate-cli) is a 100-line AWK program to let you use Google Translate without a web browser, i.e., from the terminal.\r\n\r\n    $ translate 成都是个好地方，我每年都要去玩，一定要建设好成都\r\n    Chengdu is a good place, and every year I play, we must build Chengdu\r\n\r\n## Dependencies\r\n\r\nAll you need is [GNU awk](http://www.gnu.org/software/gawk/) (3.1+) to run this program. No Google API Key is required.\r\n\r\n## Installation\r\n\r\n### Manually\r\n\r\n`translate.awk` is a runnable AWK script. Feel free to copy it to anywhere in your `$PATH` and rename it whatever you like.\r\n\r\nOn Mac OS X and FreeBSD, you may want to change the shebang from:\r\n\r\n    #!/usr/bin/gawk -f\r\n\r\nto:\r\n\r\n    #!/usr/bin/env gawk -f\r\n\r\n### Automatically\r\n\r\n#### GNU/Linux, Windows (Cygwin)\r\n\r\n    $ git clone git://github.com/soimort/google-translate-cli.git\r\n    $ cd google-translate-cli/\r\n    $ make install\r\n\r\n#### OS X, FreeBSD\r\n\r\nFirstly, install GNU awk (if necessary). The original BSD awk will not work.\r\n\r\n    $ git clone git://github.com/soimort/google-translate-cli.git\r\n    $ cd google-translate-cli/\r\n    $ make install\r\n\r\n#### Windows (MinGW)\r\n\r\nFirstly, install GNU awk (if necessary),\r\n\r\n    $ mingw-get install msys-gawk\r\n\r\nThen put `translate.awk` into your `$PATH`,\r\n\r\n    $ git clone git://github.com/soimort/google-translate-cli.git\r\n    $ cd google-translate-cli/\r\n    $ cp translate.awk /bin/trs\r\n\r\n## Usage\r\n\r\n    $ trs\r\n    Usage: translate {[SL]=[TL]} TEXT|TEXT_FILENAME\r\n           translate {[SL]=[TL1]+[TL2]+...} TEXT|TEXT_FILENAME\r\n           translate TEXT1 TEXT2 ...\r\n\r\n    TEXT: Source text (The text to be translated)\r\n          Can also be the filename of a plain text file.\r\n      SL: Source language (The language of the source text)\r\n      TL: Target language (The language to translate the source text into)\r\n          Language codes as listed here:\r\n        * http://developers.google.com/translate/v2/using_rest#language-params\r\n          Ignore the code where you want the system to identify it for you.\r\n          Prefix the code with an ampersat @ to show the result phonetically.\r\n\r\n## Examples\r\n\r\nTranslate anything of any language into English.\r\n\r\n    $ trs Weltschmerz\r\n    world-weariness\r\n\r\n    $ trs Weltschmerz コスプレ \"Bon appétit.\" 周星馳\r\n    world-weariness\r\n    Cosplay\r\n    Good appetite.\r\n    Stephen Chow\r\n\r\nTranslate \"Hello, world\" into Esperanto.\r\n\r\n    $ trs {=eo} \"Hello, world\"\r\n    Saluton, mondo\r\n\r\nTranslate \"Hello, world\" into Chinese, Japanese, Korean and Thai.\r\n\r\n    $ trs {=zh+ja+ko+th} \"Hello, world\"\r\n    您好，世界\r\n    世界よこんにちは\r\n    안녕하세요, 세계\r\n    สวัสดีโลก\r\n\r\nTranslate a Latin phrase into English.\r\n\r\n    $ trs {la=} \"Ego sum qui sum.\"\r\n    I am who I am.\r\n\r\nTranslate Japanese to French.\r\n\r\n    $ trs {ja=fr} \"愛してる。\"\r\n    Je t'aime!\r\n\r\nShow the phonetics of a Japanese quote and translate it into both English and Traditional Chinese.\r\n\r\n    $ trs {ja=@ja+en+zh-TW} \"あなたは死なないわ、私が守るもの。\"\r\n    Anata wa shinanai wa, watashi ga mamoru mono. \r\n    What you'll not die, I will protect you.\r\n    你會不會死，我會保護你。\r\n\r\nTranslate an English context text file into Chinese.\r\n\r\ne.g. `POETRY.txt`:\r\n\r\n    Afternoon Of Circus And Citadel\r\n    by Paul Celan\r\n\r\n    In Brest, before the Fire-Hoops burning,\r\n    In the Tent, where Tigers sprang,\r\n    there I heard you, Finite, singing,\r\n    there I saw you, Mandelstam.\r\n\r\n    The Sky hung over the Roadstead,\r\n    the Gull, hung over the Crane.\r\n    The Finite sang there, the Constant –\r\n    you, the Gunboat, Baobab.\r\n\r\n    I hailed the Tricolor\r\n    with a Russian Word –\r\n    the Lost was Un-Lost,\r\n    the Heart Anchored there.\r\n\r\nThe translation is streamed to standard output.\r\n\r\n    $ trs {=zh} POETRY.txt\r\n    下午，广场和城堡\r\n    由保罗·策兰\r\n\r\n    在布雷斯特，消防篮球燃烧前，\r\n    在帐篷里，老虎窜出，\r\n    在那里，我听到你的，有限的，唱歌，\r\n    在那里，我看到你，曼德尔施塔姆。\r\n\r\n    挂在天空的锚地，\r\n    沙鸥，挂在起重机上。\r\n    有限唱在那里，恒 - \r\n    你，的炮舰，猴面包树。\r\n\r\n    我欢呼三色旗\r\n    与俄罗斯词 - \r\n    失落的是联合国忘了，\r\n    心锚。\r\n    \r\n\r\n## Language Code Reference\r\n\r\nSee <https://developers.google.com/translate/v2/using_rest#language-params>.\r\n\r\n## Important Notes\r\n\r\n* Be careful with shell special characters. In most cases, putting them inside a pair of ___single quotation marks___ is safe.\r\n\r\n* You may NOT use exclamation marks `!` ([as well as](http://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html) `$`, <code>&#96;</code> and `\\`) inside _double quotes_ without escaping them; the shell will complain.  \r\nHere is an example (non-working):\r\n\r\n    `$ trs {=de} \"Damn it! I'm not working!\"`\r\n\r\n  Instead, you use:\r\n\r\n    `$ trs {=de} \"Bazinga\\! I'm working now\\!\"`\r\n\r\n* You should NOT be using `[` nor `]` on any occasions.\r\n\r\n* Don't get one source text too long (and when reading from a text file, don't get one line too long). The query string is encoded into URIs and overlength may lead to unexpected lost.\r\n\r\n## Additional Tips for Vim Users\r\n\r\nAdd a line to your `~/.vimrc`: (feel free to use any language codes as you like)\r\n\r\n    set keywordprg=trs\\ {ja=@ja+en}\r\n\r\nAfterwards you could press `Shift-K` to see the translation of the word under the cursor.\r\n\r\n![](http://i.imgur.com/OK2UYyn.gif)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}